From 98bce52ddf46c0c8c6be57c27d4aa9c48303798b Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Tue, 14 Mar 2023 21:12:22 -0600
Subject: [PATCH] ntdll: HACK: Add WINE_SIMULATE_WRITECOPY option.

CW-Bug-Id: #22034
---
 dlls/ntdll/unix/loader.c       | 12 +++++
 dlls/ntdll/unix/unix_private.h |  2 +
 dlls/ntdll/unix/virtual.c      | 11 +++++++++++--
 3 files changed, 26 insertions(+), 1 deletions(-)

diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index 9f00e45..67d071a 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -1052,6 +1052,7 @@ const unixlib_entry_t unix_call_wow64_funcs[] =
 
 BOOL ac_odyssey;
 BOOL fsync_simulate_sched_quantum;
+BOOL simulate_writecopy;
 
 static void hacks_init(void)
 {
@@ -1073,6 +1074,12 @@ static void hacks_init(void)
     if (fsync_simulate_sched_quantum)
         ERR("HACK: Simulating sched quantum in fsync.\n");
 
+    env_str = getenv("WINE_SIMULATE_WRITECOPY");
+    if (env_str) simulate_writecopy = atoi(env_str);
+    else simulate_writecopy = (main_argc > 1) &&
+                              (strstr(main_argv[1], "UplayWebCore.exe") ||
+                               strstr(main_argv[1], "Battle.net.exe"));
+
     env_str = getenv("SteamGameId");
     if (env_str && !strcmp(env_str, "50130"))
         setenv("WINESTEAMNOEXEC", "1", 0);
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 2bf8975..8a5baf3 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -181,6 +181,7 @@ extern struct ldt_copy __wine_ldt_copy;
 
 extern BOOL ac_odyssey;
 extern BOOL fsync_simulate_sched_quantum;
+extern BOOL simulate_writecopy;
 
 extern void init_environment(void);
 extern void init_startup_info(void);
 extern void *create_startup_info( const UNICODE_STRING *nt_image, ULONG process_flags,
diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 59c0e6d..9a7af20 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -1112,7 +1112,8 @@ static const char *get_prot_str( BYTE prot )
     buffer[0] = (prot & VPROT_COMMITTED) ? 'c' : '-';
     buffer[1] = (prot & VPROT_GUARD) ? 'g' : ((prot & VPROT_WRITEWATCH) ? 'H' : '-');
     buffer[2] = (prot & VPROT_READ) ? 'r' : '-';
-    buffer[3] = (prot & VPROT_WRITECOPY) ? 'W' : ((prot & VPROT_WRITE) ? 'w' : '-');
+    buffer[3] = (prot & VPROT_WRITECOPY) ? (prot & VPROT_WRITTEN ? 'w' : 'W') :
+                ((prot & VPROT_WRITE) ? 'w' : '-');
     buffer[4] = (prot & VPROT_EXEC) ? 'x' : '-';
     buffer[5] = 0;
     return buffer;
@@ -4995,6 +4996,16 @@ NTSTATUS WINAPI NtProtectVirtualMemory( HANDLE process, PVOID *addr_ptr, SIZE_T
         {
             old = get_win32_prot( vprot, view->protect );
             status = set_protection( view, base, size, new_prot );
+
+            if (simulate_writecopy && status == STATUS_SUCCESS
+                && ((old == PAGE_WRITECOPY || old == PAGE_EXECUTE_WRITECOPY)))
+            {
+                TRACE("Setting VPROT_WRITTEN.\n");
+
+                set_page_vprot_bits(base, size, VPROT_WRITTEN, 0);
+                vprot |= VPROT_WRITTEN;
+                old = get_win32_prot( vprot, view->protect );
+            }
         }
         else status = STATUS_NOT_COMMITTED;
     }
