diff --git a/dlls/winevulkan/vulkan.c b/dlls/winevulkan/vulkan.c
index 2691624db66..cea8c693cca 100644
--- a/dlls/winevulkan/vulkan.c
+++ b/dlls/winevulkan/vulkan.c
@@ -2458,3 +2458,43 @@ NTSTATUS vk_is_available_device_function32(void *arg)
     struct wine_device *device = wine_device_from_handle(UlongToPtr(params->device));
     return !!vk_funcs->p_vkGetDeviceProcAddr(device->host_device, UlongToPtr(params->name));
 }
+
+DECLSPEC_EXPORT VkDevice __wine_get_native_VkDevice(VkDevice handle)
+{
+    struct wine_device *device = wine_device_from_handle(handle);
+
+    return device->host_device;
+}
+
+DECLSPEC_EXPORT VkInstance __wine_get_native_VkInstance(VkInstance handle)
+{
+    struct wine_instance *instance = wine_instance_from_handle(handle);
+
+    return instance->host_instance;
+}
+
+DECLSPEC_EXPORT VkPhysicalDevice __wine_get_native_VkPhysicalDevice(VkPhysicalDevice handle)
+{
+    struct wine_phys_dev *phys_dev = wine_phys_dev_from_handle(handle);
+
+    return phys_dev->host_physical_device;
+}
+
+DECLSPEC_EXPORT VkQueue __wine_get_native_VkQueue(VkQueue handle)
+{
+    struct wine_queue *queue = wine_queue_from_handle(handle);
+
+    return queue->host_queue;
+}
+
+DECLSPEC_EXPORT VkPhysicalDevice __wine_get_wrapped_VkPhysicalDevice(VkInstance handle, VkPhysicalDevice native_phys_dev)
+{
+    struct wine_instance *instance = wine_instance_from_handle(handle);
+    uint32_t i;
+    for (i = 0; i < instance->phys_dev_count; ++i){
+        if (instance->phys_devs[i].host_physical_device == native_phys_dev)
+            return instance->phys_devs[i].handle;
+    }
+    WARN("Unknown native physical device: %p\n", native_phys_dev);
+    return NULL;
+}
